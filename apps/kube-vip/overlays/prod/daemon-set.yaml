# Based on https://kube-vip.io/docs/installation/daemonset/
# export VIP=10.10.1.10
# export KVVERSION=v1.0.0
# alias kube-vip="sudo ctr image pull ghcr.io/kube-vip/kube-vip:$KVVERSION; sudo ctr run --rm --net-host ghcr.io/kube-vip/kube-vip:$KVVERSION vip /kube-vip"
# kube-vip manifest daemonset \
#     --address $VIP \
#     --inCluster \
#     --taint \
#     --controlplane \
#     --bgp \
#     --localAS 65000 \
#     --bgpRouterID 10.10.1.1 \
#     --bgppeers 10.10.1.11:65000::false,10.10.1.12:65000::false,10.10.1.13:65000::false
#
apiVersion: apps/v1
kind: DaemonSet
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/name: kube-vip-ds
    # renovate: datasource=github-releases depName=kube-vip/kube-vip
    app.kubernetes.io/version: v1.0.0
  name: kube-vip-ds
  namespace: kube-system
spec:
  selector:
    matchLabels:
      app.kubernetes.io/name: kube-vip-ds
  template:
    metadata:
      creationTimestamp: null
      labels:
        app.kubernetes.io/name: kube-vip-ds
        # renovate: datasource=github-releases depName=kube-vip/kube-vip
        app.kubernetes.io/version: v1.0.0
    spec:
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
              - matchExpressions:
                  - key: node-role.kubernetes.io/master
                    operator: Exists
              - matchExpressions:
                  - key: node-role.kubernetes.io/control-plane
                    operator: Exists
      containers:
        - args:
            - manager
          env:
            - name: vip_arp
              value: "false"
            - name: port
              value: "6443"
            - name: vip_nodename
              valueFrom:
                fieldRef:
                  fieldPath: spec.nodeName
            - name: vip_subnet #              Used when advertising BGP addresses
              value: "32"
            - name: dns_mode
              value: first
            - name: cp_enable #               Enables kube-vip control plane functionality
              value: "true"
            - name: cp_namespace #            The namespace where the lease will reside
              value: kube-system
            - name: svc_enable #              Enables kube-vip to watch Services of type LoadBalancer
              value: "true"
            - name: svc_leasename
              value: plndr-svcs-lock
            - name: bgp_enable #              Enables BGP peering from kube-vip
              value: "true"
            - name: bgp_routerid #            Typically the address of the local node
              valueFrom:
                fieldRef:
                  fieldPath: status.podIP
            - name: bgp_as #                  The AS we peer from
              value: "65000"
            - name: bgp_peeraddress #         Address of a single BGP Peer
            - name: bgp_peerpass #            Password to work with a single BGP Peer 
            - name: bgp_peeras #              AS of a single BGP Peer
              value: "65000"
            - name: bgp_peers #               Comma separated list of BGP peers, format: <address:AS:password:multihop>
              value: 10.10.1.11:65000::false,10.10.1.12:65000::false,10.10.1.13:65000::false
            - name: address #                 VIP config: <IP Address> or <DNS name>. 
              value: 10.10.1.10
            - name: prometheus_server
              value: :2112
          image: ghcr.io/kube-vip/kube-vip:v1.0.0
          imagePullPolicy: IfNotPresent
          name: kube-vip
          resources: {}
          securityContext:
            capabilities:
              add:
                - NET_ADMIN
                - NET_RAW
              drop:
                - ALL
      hostNetwork: true
      serviceAccountName: kube-vip
      tolerations:
        - effect: NoSchedule
          operator: Exists
        - effect: NoExecute
          operator: Exists
  updateStrategy: {}
